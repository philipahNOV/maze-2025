# config.yaml

general:
  idle_light_time: 15 # seconds, time to wait before going idle
  get_ball_delay: 5   # seconds before elevator triggers

camera:
  resolution: "HD720" # don't change
  fps: 60 # don't change
  depth_mode: "NONE"
  coordinate_units: "MILLIMETER"
  maze_width: 655        # px
  maze_height: 655       # px
  maze_offset_x: 430     # px
  maze_offset_y: 27      # px
  maze_image_scale: 0.87
  elevator_center_x: 998
  elevator_center_y: 588
  elevator_radius: 60    # px
  bottom_right: [1085, 682]
  bottom_left: [430, 682]
  top_right: [1085, 27]
  top_left: [430, 27]
  padding: 20            # px
  maze_relative_angle: 1 # deg

tracking:
  model_path: "camera/v8-291.pt" # onnx/engine?
  init_ball_region:
    x_min: 420
    y_min: 25
    x_max: 1200
    y_max: 700
  hsv_range:
    lower: [35, 55, 55]       # Light green HSV lower bound
    upper: [85, 255, 255]     # Light green HSV upper bound
  hsv_window_size: 80
  hsv_min_contour_area: 150  # px^2
  smoothing_alpha: 0.5       # smoothing factor for exponential filter
  hsv_fail_threshold: 40     # frames to wait before fallback to YOLO
  yolo_cooldown_period: 20   # frames before allowing YOLO recheck

controller:
  stuck_wiggle_amplitude: 1     # deg, amplitude of wiggle when stuck
  stuck_wiggle_frequency: 20      # Hz, frequency of wiggle when stuck
  stuck_velocity_threshold: 10    # px/s, velocity threshold to consider stuck
  stuck_upper_position_threshold: 70 # px, upper position threshold to consider stuck
  stuck_time_threshold: 0.8  # seconds, time to consider stuck
  stuck_unstuck_hold_time: 0.2 # seconds, time to hold before unsticking
  integration_pos_threshold: 60        # px, reset integral if error exceeds this
  integration_vel_threshold: 20        # px/s, reset integral if velocity exceeds this
  position_controller_normal:
    kp_x: 0.00003
    kp_y: 0.00003
    kd_x: 0.00018
    kd_y: 0.00018
    ki_x: 0.0003
    ki_y: 0.0003
    position_tolerance: 25        # px
    velocity_tolerance: 20        # px/s
    feedforward_t: 4.9
  position_controller_lookahead:
    kp_x: 0.00002
    kp_y: 0.00002
    kd_x: 0.0003
    kd_y: 0.0003
    ki_x: 0.0
    ki_y: 0.0
    position_tolerance: 40        # px
    velocity_tolerance: 20        # px/s
    feedforward_t: 6
  angular_controller:
    kp: 6500
    max_angle: 1.8                # deg
    command_delay: 0.0001
    angle_tolerance: 0.001      # rad
  horizontal_controller:
    kp: 900
    tolerance: 0.002         # rad
    time_limit: 10           # seconds
  arduino:
    x_offset: 0.014                # rad
    y_offset: -0.0035                 # rad
    minimum_velocity: 22
    maximum_velocity: 100
    minimum_velocity_difference: 10

path_finding:
  repulsion_weight: 10           # how strongly path avoids walls
  min_safe_distance: 14           # distance from obstacles for safe navigation
  astar_downscale: 1.0            # downscaling factor
  clear_path_kernel_size: 6       # morph kernel for visibility check
  dilation_iterations: 2
  clahe_clip_limit: 1.0
  adaptive_threshold_target: 130
  path_cache_size: 30                 # max_paths in PathMemory
  path_cache_tolerance: 15           # tolerance for cache reuse
  path_cache_file: "astar/path_cache.json" # default cache filename

path_following:
  lookahead:
    lookahead_distance: 70
    adaptive: false
    lookahead_distance_min: 55
    lookahead_distance_max: 80
    smoothing_alpha: 0.03
    velocity_gain: 100
    curvature_gain: 0.99
  normal:
    velocity_threshold: 50
    stuck_retry_time: 3
    dwell_time: 1
    checkpoint_timeout: 15  # seconds, time to wait before changing checkpoint

animations:
  locating_ball:
    fps: 30
  path_finding:
    fps: 8
